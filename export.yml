- name: Playbook que executa o export das regras
  hosts: NOME_DO_CLIENTE
  gather_facts: no
  tasks:
  - name: "Exportando a regra"
    shell: cd /opt/rules/export && rm -rf * && /opt/qradar/bin/contentManagement.pl -a export --content-type 3 --regex "^NOME_DA_REGRA*" | tee new_rule
  - name: "Extraindo os arquivos"
    shell: cd /opt/rules/export && unzip `grep SUCCESS new_rule | cut -d"/" -f5`
  - name: "Excluindo arquivos não utilizados"
    shell: cd /opt/rules/export && rm -rf *.zip && rm -rf new_rule
  - name: Pesquisando o arquivo no SIEM e salvando sua saida 
      shell: (cd /opt/rules/export/; find . -maxdepth 1 -type f) | cut -d'/' -f2
      register: files_to_copy
  - name: Copiando o arquivo para a aplicação
      fetch:
        src: /opt/rules/export/{{ item }}
        dest: /opt/rundeck/git/lab/
        flat: true
      with_items: "{{ files_to_copy.stdout_lines }}"  
###

#- name: Playbook que executa o export das regras
#  hosts: NOME_DO_CLIENTE
#  gather_facts: no
#  tasks:
#  - name: "Exportando a regra"
#    shell: cd /opt/rules/export && rm -rf * && /opt/qradar/bin/contentManagement.pl -a export --content-type 3 --regex "^NOME_DA_REGRA*" | tee new_rule
#  - name: "Extraindo os arquivos"
#    shell: cd /opt/rules/export && unzip `grep SUCCESS new_rule | cut -d"/" -f5`
#  - name: definindo a variavel da regra
#    shell: rule_name=`grep SUCCESS new_rule | cut -d"/" -f5 | sed -e "s/.zip/.xml/g"`
  #- name: definindo o nome do arquivo
  #  shell: mv -v $rule_name.xml /opt/rules/export/"NOME_DA_REGRA".xml
  #- name: "Renomeando o arquivo "
  #  shell: mv `grep SUCCESS new_rule | cut -d"/" -f5 | sed -e "s/.zip/.xml/g"` "NOME_DA_REGRA*".xml
  #  command: mv /opt/rules/export/`grep SUCCESS new_rule | cut -d"/" -f5 | sed -e "s/.zip/.xml/g"` "NOME_DA_REGRA*".xml` /opt/rules/export/"NOME_DA_REGRA".xml
#  - name: "Excluindo arquivos não utilizados"
#    shell: cd /opt/rules/export && rm -rf *.zip && rm -rf new_rule
  #- name: "Renomeando o arquivo "
  #  shell: cp -p *.xml "NOME_DA_REGRA*".xml
###
